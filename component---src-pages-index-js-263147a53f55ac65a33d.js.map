{"version":3,"file":"component---src-pages-index-js-263147a53f55ac65a33d.js","mappings":"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","sources":["webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/context.js","webpack://data-driven-travel/./node_modules/react-leaflet/lib/MapContainer.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/element.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/events.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/pane.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/layer.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/attribution.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/path.js","webpack://data-driven-travel/./node_modules/react-leaflet/lib/TileLayer.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/component.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/generic.js","webpack://data-driven-travel/./node_modules/@react-leaflet/core/lib/grid-layer.js","webpack://data-driven-travel/./node_modules/react-leaflet/lib/GeoJSON.js","webpack://data-driven-travel/./src/pages/index.js"],"sourcesContent":["import { createContext, useContext } from 'react';\nexport const CONTEXT_VERSION = 1;\nexport function createLeafletContext(map) {\n    return Object.freeze({\n        __version: CONTEXT_VERSION,\n        map\n    });\n}\nexport function extendContext(source, extra) {\n    return Object.freeze({\n        ...source,\n        ...extra\n    });\n}\nexport const LeafletContext = createContext(null);\nexport const LeafletProvider = LeafletContext.Provider;\nexport function useLeafletContext() {\n    const context = useContext(LeafletContext);\n    if (context == null) {\n        throw new Error('No context provided: useLeafletContext() can only be used in a descendant of <MapContainer>');\n    }\n    return context;\n}\n","function _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nimport { LeafletProvider, createLeafletContext } from '@react-leaflet/core';\nimport { Map as LeafletMap } from 'leaflet';\nimport React, { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nfunction MapContainerComponent({ bounds , boundsOptions , center , children , className , id , placeholder , style , whenReady , zoom , ...options }, forwardedRef) {\n    const [props] = useState({\n        className,\n        id,\n        style\n    });\n    const [context, setContext] = useState(null);\n    useImperativeHandle(forwardedRef, ()=>context?.map ?? null, [\n        context\n    ]);\n    const mapRef = useCallback((node)=>{\n        if (node !== null && context === null) {\n            const map = new LeafletMap(node, options);\n            if (center != null && zoom != null) {\n                map.setView(center, zoom);\n            } else if (bounds != null) {\n                map.fitBounds(bounds, boundsOptions);\n            }\n            if (whenReady != null) {\n                map.whenReady(whenReady);\n            }\n            setContext(createLeafletContext(map));\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(()=>{\n        return ()=>{\n            context?.map.remove();\n        };\n    }, [\n        context\n    ]);\n    const contents = context ? /*#__PURE__*/ React.createElement(LeafletProvider, {\n        value: context\n    }, children) : placeholder ?? null;\n    return /*#__PURE__*/ React.createElement(\"div\", _extends({}, props, {\n        ref: mapRef\n    }), contents);\n}\nexport const MapContainer = /*#__PURE__*/ forwardRef(MapContainerComponent);\n","import { useEffect, useRef } from 'react';\nexport function createElementObject(instance, context, container) {\n    return Object.freeze({\n        instance,\n        context,\n        container\n    });\n}\nexport function createElementHook(createElement, updateElement) {\n    if (updateElement == null) {\n        return function useImmutableLeafletElement(props, context) {\n            const elementRef = useRef();\n            if (!elementRef.current) elementRef.current = createElement(props, context);\n            return elementRef;\n        };\n    }\n    return function useMutableLeafletElement(props, context) {\n        const elementRef = useRef();\n        if (!elementRef.current) elementRef.current = createElement(props, context);\n        const propsRef = useRef(props);\n        const { instance  } = elementRef.current;\n        useEffect(function updateElementProps() {\n            if (propsRef.current !== props) {\n                updateElement(instance, props, propsRef.current);\n                propsRef.current = props;\n            }\n        }, [\n            instance,\n            props,\n            context\n        ]);\n        return elementRef;\n    };\n}\n","import { useEffect, useRef } from 'react';\nexport function useEventHandlers(element, eventHandlers) {\n    const eventHandlersRef = useRef();\n    useEffect(function addEventHandlers() {\n        if (eventHandlers != null) {\n            element.instance.on(eventHandlers);\n        }\n        eventHandlersRef.current = eventHandlers;\n        return function removeEventHandlers() {\n            if (eventHandlersRef.current != null) {\n                element.instance.off(eventHandlersRef.current);\n            }\n            eventHandlersRef.current = null;\n        };\n    }, [\n        element,\n        eventHandlers\n    ]);\n}\n","export function withPane(props, context) {\n    const pane = props.pane ?? context.pane;\n    return pane ? {\n        ...props,\n        pane\n    } : props;\n}\n","import { useEffect } from 'react';\nimport { useAttribution } from './attribution.js';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { withPane } from './pane.js';\nexport function useLayerLifecycle(element, context) {\n    useEffect(function addLayer() {\n        const container = context.layerContainer ?? context.map;\n        container.addLayer(element.instance);\n        return function removeLayer() {\n            context.layerContainer?.removeLayer(element.instance);\n            context.map.removeLayer(element.instance);\n        };\n    }, [\n        context,\n        element\n    ]);\n}\nexport function createLayerHook(useElement) {\n    return function useLayer(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useAttribution(context.map, props.attribution);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        return elementRef;\n    };\n}\n","import { useEffect, useRef } from 'react';\nexport function useAttribution(map, attribution) {\n    const attributionRef = useRef(attribution);\n    useEffect(function updateAttribution() {\n        if (attribution !== attributionRef.current && map.attributionControl != null) {\n            if (attributionRef.current != null) {\n                map.attributionControl.removeAttribution(attributionRef.current);\n            }\n            if (attribution != null) {\n                map.attributionControl.addAttribution(attribution);\n            }\n        }\n        attributionRef.current = attribution;\n    }, [\n        map,\n        attribution\n    ]);\n}\n","import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context.js';\nimport { useEventHandlers } from './events.js';\nimport { useLayerLifecycle } from './layer.js';\nimport { withPane } from './pane.js';\nexport function usePathOptions(element, props) {\n    const optionsRef = useRef();\n    useEffect(function updatePathOptions() {\n        if (props.pathOptions !== optionsRef.current) {\n            const options = props.pathOptions ?? {};\n            element.instance.setStyle(options);\n            optionsRef.current = options;\n        }\n    }, [\n        element,\n        props\n    ]);\n}\nexport function createPathHook(useElement) {\n    return function usePath(props) {\n        const context = useLeafletContext();\n        const elementRef = useElement(withPane(props, context), context);\n        useEventHandlers(elementRef.current, props.eventHandlers);\n        useLayerLifecycle(elementRef.current, context);\n        usePathOptions(elementRef.current, props);\n        return elementRef;\n    };\n}\n","import { createElementObject, createTileLayerComponent, updateGridLayer, withPane } from '@react-leaflet/core';\nimport { TileLayer as LeafletTileLayer } from 'leaflet';\nexport const TileLayer = createTileLayerComponent(function createTileLayer({ url , ...options }, context) {\n    const layer = new LeafletTileLayer(url, withPane(options, context));\n    return createElementObject(layer, context);\n}, function updateTileLayer(layer, props, prevProps) {\n    updateGridLayer(layer, props, prevProps);\n    const { url  } = props;\n    if (url != null && url !== prevProps.url) {\n        layer.setUrl(url);\n    }\n});\n","import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance , context  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return props.children == null ? null : /*#__PURE__*/ React.createElement(LeafletProvider, {\n            value: context\n        }, props.children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance  } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n","import { createContainerComponent, createDivOverlayComponent, createLeafComponent } from './component.js';\nimport { createControlHook } from './control.js';\nimport { createElementHook, createElementObject } from './element.js';\nimport { createLayerHook } from './layer.js';\nimport { createDivOverlayHook } from './div-overlay.js';\nimport { createPathHook } from './path.js';\nexport function createControlComponent(createInstance) {\n    function createElement(props, context) {\n        return createElementObject(createInstance(props), context);\n    }\n    const useElement = createElementHook(createElement);\n    const useControl = createControlHook(useElement);\n    return createLeafComponent(useControl);\n}\nexport function createLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createContainerComponent(useLayer);\n}\nexport function createOverlayComponent(createElement, useLifecycle) {\n    const useElement = createElementHook(createElement);\n    const useOverlay = createDivOverlayHook(useElement, useLifecycle);\n    return createDivOverlayComponent(useOverlay);\n}\nexport function createPathComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const usePath = createPathHook(useElement);\n    return createContainerComponent(usePath);\n}\nexport function createTileLayerComponent(createElement, updateElement) {\n    const useElement = createElementHook(createElement, updateElement);\n    const useLayer = createLayerHook(useElement);\n    return createLeafComponent(useLayer);\n}\n","export function updateGridLayer(layer, props, prevProps) {\n    const { opacity , zIndex  } = props;\n    if (opacity != null && opacity !== prevProps.opacity) {\n        layer.setOpacity(opacity);\n    }\n    if (zIndex != null && zIndex !== prevProps.zIndex) {\n        layer.setZIndex(zIndex);\n    }\n}\n","import { createElementObject, createPathComponent, extendContext } from '@react-leaflet/core';\nimport { GeoJSON as LeafletGeoJSON } from 'leaflet';\nexport const GeoJSON = createPathComponent(function createGeoJSON({ data , ...options }, ctx) {\n    const geoJSON = new LeafletGeoJSON(data, options);\n    return createElementObject(geoJSON, extendContext(ctx, {\n        overlayContainer: geoJSON\n    }));\n}, function updateGeoJSON(layer, props, prevProps) {\n    if (props.style !== prevProps.style) {\n        if (props.style == null) {\n            layer.resetStyle();\n        } else {\n            layer.setStyle(props.style);\n        }\n    }\n});\n","import * as React from \"react\"\nimport { \n  GeoJSON,\n  MapContainer,\n  TileLayer\n} from \"react-leaflet\"\n\nimport DEFAULT_MAP_GEOJSON from \"../data/thailand.json\"\nimport PREDICTION_DATA from \"../data/output.json\"\n\nconst DEFAULT_COORDS = [15.87, 100.9925]\n\nconst mapStyle = {\n  height: 600,\n}\n\nconst IndexPage = () => {\n  return (\n    <main>\n      <h1>\n        Data Driven Travel\n      </h1>\n      \n      <MapContainer id=\"map\" style={mapStyle} center={DEFAULT_COORDS} zoom={5}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <GeoJSON key={1} data={DEFAULT_MAP_GEOJSON} />\n      </MapContainer>  \n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const Head = () => \n  <>\n    <title>Data Driven Travel</title>\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"\n     integrity=\"sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=\"\n     crossOrigin=\"\"/>\n    <script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"\n      integrity=\"sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=\"\n      crossOrigin=\"\"></script>\n  </>\n"],"names":["CONTEXT_VERSION","LeafletContext","createContext","LeafletProvider","Provider","useLeafletContext","context","useContext","Error","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","MapContainerComponent","bounds","boundsOptions","center","children","className","id","placeholder","style","whenReady","zoom","options","forwardedRef","props","useState","setContext","useImperativeHandle","map","mapRef","useCallback","node","setView","fitBounds","freeze","__version","createLeafletContext","useEffect","remove","contents","value","ref","MapContainer","forwardRef","instance","container","createElement","updateElement","elementRef","useRef","current","propsRef","useEventHandlers","element","eventHandlers","eventHandlersRef","on","off","withPane","pane","useLayerLifecycle","layerContainer","addLayer","removeLayer","useElement","attribution","attributionRef","attributionControl","removeAttribution","addAttribution","useAttribution","createPathHook","optionsRef","pathOptions","setStyle","usePathOptions","TileLayer","LeafComponent","url","layer","prevProps","opacity","zIndex","setOpacity","setZIndex","updateGridLayer","setUrl","GeoJSON","ContainerComponent","createPathComponent","data","ctx","geoJSON","extra","overlayContainer","resetStyle","DEFAULT_COORDS","mapStyle","height","DEFAULT_MAP_GEOJSON","Head","rel","href","integrity","crossOrigin","src"],"sourceRoot":""}